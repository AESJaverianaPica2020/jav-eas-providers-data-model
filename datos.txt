show dbs;

use touresbalon;

db.createCollection('providers');

db.providers.insert({
      'name': 'AVIANCA',
      'type': 'FLIGHTS',
      'integrationType': 'SOAP',
      'settings': {
        'request': {
          'parameters': {
            'methods': {
              'catalogue': {
                'endpoint': 'http://host.docker.internal:7171/TuresBalonProviders-Avianca-context-root/ServicioAviancaVuelosSoapHttpPort',
                'Action': 'http://servicios.avianca.com/types/consultarVuelo',
                'EnvelopeRequest': '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://servicios.avianca.com/types/"><soapenv:Header/><soapenv:Body><typ:consultarVueloElement><typ:ciudadOrigen>@ciudadOrigen</typ:ciudadOrigen><typ:ciudadDestino>@ciudadDestino</typ:ciudadDestino><typ:fechaSalida>@fechaSalida</typ:fechaSalida><typ:clase>@clase</typ:clase></typ:consultarVueloElement></soapenv:Body></soapenv:Envelope>',
                'NullableParams': [
                '@ciudadOrigen',
                '@ciudadDestino',
                '@fechaSalida',
                '@clase'
              ],
                'MandatoryParams': null,
                'RelationConstrain': {
                  '@clase': {
                    'Eje': 'EJECUTIVO',
                    'Pcl': 'PRIMERA CLASE',
                    'Bar': 'BARATO'
                  }
                }
              },
              'reserve': {
                'endpoint': 'http://host.docker.internal:7171/TuresBalonProviders-Avianca-context-root/ServicioAviancaVuelosSoapHttpPort',
                'Action': 'http://servicios.avianca.com/types/reservarVuelo',
                'EnvelopeRequest': '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://servicios.avianca.com/types/"><soapenv:Header/><soapenv:Body><typ:reservarVueloElement><typ:vuelo><typ:fechaSalida>@fechaSalida</typ:fechaSalida><typ:fechaLlegada>@fechaLlegada</typ:fechaLlegada><typ:ciudadOrigen>@ciudadOrigen</typ:ciudadOrigen><typ:vuelo>@vuelo</typ:vuelo><typ:clase>@clase</typ:clase><typ:ciudadDestino>@ciudadDestino</typ:ciudadDestino><typ:precio>@precio</typ:precio></typ:vuelo><typ:nombrePasajero>@nombrePasajero</typ:nombrePasajero><typ:numeroIdentidadPasajero>@numeroIdentidadPasajero</typ:numeroIdentidadPasajero></typ:reservarVueloElement></soapenv:Body></soapenv:Envelope>',
                'NullableParams': [
                '@fechaSalida',
                '@fechaLlegada',
                '@ciudadOrigen',
                '@vuelo',
                '@clase',
                '@ciudadDestino',
                '@precio',
                '@nombrePasajero',
                '@numeroIdentidadPasajero'
              ],
                'MandatoryParams': null,
                'RelationConstrain': {
                  '@clase': {
                    'Eje': 'EJECUTIVO',
                    'Pcl': 'PRIMERA CLASE',
                    'Bar': 'BARATO'
                  }
                }
              }
            }
          }
        },
        'response': {
            'catalogue': {
                "mainField": 'soapenv:Envelope|soapenv:Body|typ:consultarVueloResponseElement|typ:result|',
                'canonicalModel': {
                    'origin': 'typ:ciudadOrigen|',
                    'destination': 'typ:ciudadDestino|',
                    'startDate': 'typ:fechaLlegada|',
                    'endDate': 'typ:fechaSalida|',
                    'price': 'typ:precio|',
                    'class': 'typ:clase|',
                    'code': 'typ:vuelo|'
                }
            },
            'reserve': {
                "mainField": 'soapenv:Envelope|soapenv:Body|typ:reservarVueloResponseElement|',
                'canonicalModel': {
                    'status': 'typ:result|Boolean'
                }
            }
        }
      }
    });

db.providers.insert({
      'name': 'AMADEUS',
      'type': 'FLIGHTS',
      'integrationType': 'REST',
      'settings': {
        'request': {
          'parameters': {
            'methods': {
              'catalogue': {
                'BaseURL': 'https://providers.free.beeceptor.com',
                'APIMethod': '/v1/shopping/flight-dates',
                'HttpVerbose': 'GET',
                'Header': {
                  'TokenHeader': false,
                  'HeaderParameters': null,
                  'MediaTypeHeader': null,
                  'TokenDefinition': null
                },
                'Body': {
                  'BodyMediaType': null,
                  'BodyJsonMessage': null,
                  'BodyRawMessage': null
                },
                'Parameters': {
                  'Parameters': {
                    'origin': '@origin',
                    'oneWay': '@oneWay',
                    'nonStop': '@nonStop',
                    'viewBy': '@viewBy',
                    'departureDate': '@departureDate'
                  }
                }
              },
              'reserve': {
                'BaseURL': 'https://providers.free.beeceptor.invalid.com',
                'APIMethod': '/v1/shopping/flight-dates',
                'HttpVerbose': 'POST',
                'Header': {
                  'TokenHeader': false,
                  'HeaderParameters': null,
                  'MediaTypeHeader': null,
                  'TokenDefinition': null
                },
                'Body': {
                  'BodyMediaType': null,
                  'BodyJsonMessage': null,
                  'BodyRawMessage': null
                },
                'Parameters': {
                  'Parameters': {
                    'origin': '@origin',
                    'oneWay': '@oneWay',
                    'nonStop': '@nonStop',
                    'viewBy': '@viewBy',
                    'departureDate': '@departureDate'
                  }
                }
              }
            }
          }
        },
        'response': {
            'catalogue': {
                'mainField': 'data|',
                'canonicalModel': {
                    'origin': 'origin|',
                    'destination': 'destination|',
                    'startDate': 'departureDate|',
                    'endDate': 'returnDate|',
                    'price': 'price|total|',
                    'code': 'code|'
                }
            },
            'reserve': {
                "mainField": '',
                'canonicalModel': {
                    'result': 'result|Boolean'
                }
            }
        }
      }
    });


db.providers.insert({
            'type': 'FLIGHTS',
            'name': 'VIVA_COLOMBIA',
            'integrationType': 'DATABASE',
            'settings': {
                'request': {
                    'parameters': {
                        'parameters': {
                            'endpoint': 'host.docker.internal:3306/VIVA_COLOMBIA_DB?createDatabaseIfNotExist=false',
                            'user': 'root',
                            'password': 'Cobos.91',
                            'engineType': 'MYSQL',
                            'statements': {
                                'catalogue': 'select * from vuelos where fecha_salida >= \'@StartDate\' and fecha_llegada <= \'@EndDate\';',
                                'reserve': 'INSERT INTO RESERVAS_VUELOS (vuelo_id, cantidad_pasajeros) VALUES (@code, @QuantityTravellers);'
                            }
                        }
                    }
                },
                'response': {
                    'catalogue': {
                        'mainField': 'details|',
                        'canonicalModel': {
                            'origin': 'ciudad_salida|',
                            'destination': 'ciudad_llegada|',
                            'startDate': 'fecha_salida|',
                            'endDate': 'fecha_llegada|',
                            'price': 'precio|',
                            'class': 'cabina|',
                            'code': 'id'
                        }
                    },
                    'reserve': {
                        'mainField': '',
                        'canonicalModel': {
                            'result': 'idProcess|NotEmpty'
                        }
                    }
                }
            }
        });
        
db.providers.find();
